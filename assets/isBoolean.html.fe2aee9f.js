import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode } from "./app.eda87d9d.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">isBoolean</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u68C0\u67E5 value \u662F\u5426\u662F\u539F\u59CB boolean \u7C7B\u578B\u6216\u8005\u5BF9\u8C61\u3002</p><p><strong><em>\u6DFB\u52A0\u7248\u672C</em></strong></p><p>0.1.0</p><p><strong><em>\u53C2\u6570</em></strong></p><p>value (*): \u8981\u68C0\u67E5\u7684\u503C\u3002</p><p><strong><em>\u8FD4\u56DE</em></strong></p><p>(boolean): \u5982\u679C value \u662F\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u90A3\u4E48\u8FD4\u56DE true\uFF0C\u5426\u5219\u8FD4\u56DE false\u3002</p><p><strong><em>\u4F8B\u5B50</em></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">isBoolean</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// =&gt; true</span>\n\n_<span class="token punctuation">.</span><span class="token function">isBoolean</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// =&gt; false</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><em>\u6E90\u7801\u5B9E\u73B0</em></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isBoolean</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">//\u5224\u65AD\u539F\u59CB\u503Cfalse true \u5E03\u5C14\u5BF9\u8C61</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    value <span class="token operator">===</span> <span class="token boolean">true</span> <span class="token operator">||</span>\n    value <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token operator">||</span>\n    <span class="token punctuation">(</span><span class="token function">isObjectLike</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">baseGetTag</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">==</span> boolTag<span class="token punctuation">)</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> isBoolean<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><em>\u7B80\u5355\u6A21\u62DF\u5B9E\u73B0</em></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isBoolean</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> value <span class="token operator">===</span> <span class="token boolean">true</span> <span class="token operator">||</span> value <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token operator">||</span> value <span class="token keyword">instanceof</span> <span class="token class-name">Boolean</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 14);
const _hoisted_15 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_15);
}
var isBoolean_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "isBoolean.html.vue"]]);
export { isBoolean_html as default };
