import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode } from "./app.eda87d9d.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">defaultTo</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> defaultValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u68C0\u67E5 value\uFF0C\u4EE5\u786E\u5B9A\u4E00\u4E2A\u9ED8\u8BA4\u503C\u662F\u5426\u5E94\u88AB\u8FD4\u56DE\u3002\u5982\u679C value \u4E3A NaN, null, \u6216\u8005 undefined\uFF0C\u90A3\u4E48\u8FD4\u56DE defaultValue \u9ED8\u8BA4\u503C\u3002</p><p><strong><em>\u6DFB\u52A0\u7248\u672C</em></strong></p><p>4.14.0</p><p><strong><em>\u53C2\u6570</em></strong></p><p>value (<em>): \u8981\u68C0\u67E5\u7684\u503C\u3002 defaultValue (</em>): \u9ED8\u8BA4\u503C\u3002 <strong><em>\u8FD4\u56DE</em></strong></p><p>(*): \u8FD4\u56DE resolved \u503C\u3002</p><p><strong><em>\u4F8B\u5B50</em></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>_<span class="token punctuation">.</span><span class="token function">defaultTo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// =&gt; 1</span>\n\n_<span class="token punctuation">.</span><span class="token function">defaultTo</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// =&gt; 10</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><em>\u6E90\u7801\u5B9E\u73B0</em></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u5224\u65AD\u662F\u5426\u4E3ANaN,value !== value</span>\n<span class="token keyword">function</span> <span class="token function">defaultTo</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> defaultValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> value <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> value <span class="token operator">!==</span> value <span class="token operator">?</span> defaultValue <span class="token operator">:</span> value<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><em>\u7B80\u5355\u6A21\u62DF\u5B9E\u73B0</em></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">defaultTo</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> defaultValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> value <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> value <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>\n    <span class="token operator">?</span> defaultValue\n    <span class="token operator">:</span> value<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 13);
const _hoisted_14 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_14);
}
var defaultTo_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "defaultTo.html.vue"]]);
export { defaultTo_html as default };
